{"version":3,"sources":["containers/Home.js","containers/NotFound.js","containers/Login.js","containers/Profile.js","components/AppliedRoute.js","containers/CTerminal.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","this","props","isAuthenticated","Component","containers_NotFound","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","preventDefault","state","email","password","userHasAuthenticated","history","push","alert","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","onChange","type","Button","block","disabled","validateForm","AppliedRoute","_ref","C","component","cProps","rest","objectWithoutProperties","Route","assign","render","commands","info","desciption","usage","fn","arg1","echo","description","concat","Array","from","arguments","join","ls","run","exec","user","pass","cat","file","decrypt","CTerminal","Terminal_default","welcomeMessage","promptLabel","React","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","handleLogout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","isAuthenticating","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","Nav","pullRight","react","lib","NavItem","onClick","withRouter","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53ff55ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"lander\">\r\n          <h1>Extinctathon</h1>\r\n          <p>Monitored by MaddAddam. Adam named the living animals, MaddAddam names the dead ones.</p>\r\n          {this.props.isAuthenticated && <h2>Welcome Back Crake</h2> }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>;\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if(this.state.email === \"crake\" && this.state.password === \"oryx\"){\r\n      this.props.userHasAuthenticated(true);\r\n      this.props.history.push(\"/\");\r\n    } else{\r\n      alert(\"Invalid Login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>User</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './Profile.css';\r\n\r\nexport default class Profile extends Component{\r\n    render(){\r\n        return(\r\n            <div id=\"App\">\r\n            </div>\r\n        );\r\n    } \r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from 'react'\r\nimport Terminal from 'react-console-emulator'\r\n \r\nconst commands = {\r\n    info:{\r\n        desciption:'Gives specific information for commands',\r\n        usage:'info <command>',\r\n        fn:function(arg1){\r\n            if(arg1 === 'echo')\r\n                return 'echo <string>'\r\n            else if(arg1 ==='ls'){\r\n                return 'ls <-a>'\r\n            }\r\n            else if(arg1 ==='run'){\r\n                return 'run <executable> <user> <password> *note user/password must be a string'\r\n            }\r\n            else if(arg1 ==='cat'){\r\n                return `cat test`\r\n            }\r\n            else if(arg1 ==='decrypt'){\r\n                return ''\r\n            }\r\n        }\r\n    },\r\n    echo: {\r\n        description: 'Echo a passed string.',\r\n        usage: 'echo <string>',\r\n        fn: function () {\r\n            return `${Array.from(arguments).join(' ')}`\r\n        }\r\n    },\r\n    ls:{\r\n        description:'List all directories',\r\n        usage: 'ls',\r\n        fn: function(arg1){\r\n            if(arg1 === '-a')\r\n                return `.User.txt .keyPass.txt home trash misc paradice.exe`\r\n            else\r\n                return `home trash misc paradice.exe`\r\n        }\r\n    },\r\n    run:{\r\n        description:'Runs executable',\r\n        usage:'run <executable>',\r\n        fn:function(exec, user, pass){\r\n            if(exec === 'paradice.exe'){\r\n                if(user === 'red-necked-crake' && pass ==='blysspluss'){\r\n                    return 'Burhinus grallarius'\r\n                }\r\n                else{\r\n                    return 'invalid credentials'\r\n                }\r\n            }\r\n            else\r\n                return 'Unknown .exe'\r\n        }\r\n    },\r\n    cat:{\r\n        description:'Reads content of text files',\r\n        usage:'cat <filename>',\r\n        fn:function(file){\r\n            if(file === '.User.txt'){\r\n                return '75 73 65 72 3a 72 65 64 2d 6e 65 63 6b 65 64 2d 63 72 61 6b 65'\r\n            }\r\n            else if(file ==='.keyPass.txt'){\r\n                return 'MIIBIjANBgkqhkiG9w0BAQEFA0mQV8odb6qgdLT0Tk1PsbviMMt+SlABLkGGl9uUrzOjQLryJmFWsXxBGFd4emY'\r\n            }\r\n        }\r\n    },\r\n    decrypt:{\r\n        desciption: 'Decrypts given RSA string',\r\n        usage:'decrypt <key>',\r\n        fn:function(arg1){\r\n            if(arg1 === 'MIIBIjANBgkqhkiG9w0BAQEFA0mQV8odb6qgdLT0Tk1PsbviMMt+SlABLkGGl9uUrzOjQLryJmFWsXxBGFd4emY'){\r\n                return 'pass:blysspluss'\r\n            }\r\n            else{\r\n                return 'invalid key'\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\nexport default class CTerminal extends React.Component {\r\n  render () {\r\n    return (\r\n      <Terminal\r\n        commands={commands}\r\n        welcomeMessage={'type \\'help\\' to begin '}\r\n        promptLabel={'crake@addam:~$'}\r\n      />\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\";\r\nimport Profile from \"./containers/Profile\";\r\nimport AppliedRoute from \"./components/AppliedRoute\";\r\nimport CTerminal from \"./containers/CTerminal\"\r\n\r\nexport default ({ childProps }) =>\r\n  <Switch >\r\n    {/* All the routes in this app*/}\r\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n    <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\r\n    <AppliedRoute path=\"/terminal\" exact component={CTerminal} props={childProps} />\r\n    <AppliedRoute path=\"/terminal\" exact component={CTerminal} props={childProps} />\r\n    { /* Finally, catch all unmatched routes */ }\r\n    <Route component={NotFound} />\r\n  </Switch>;\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Routes from \"./Routes\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      isAuthenticated:false\r\n    };\r\n  }\r\n  userHasAuthenticated = authenticated =>{\r\n    this.setState({isAuthenticated:authenticated});\r\n  }\r\n  handleLogout = async event => {\r\n    alert(\"Logged Out\");\r\n    this.userHasAuthenticated(false);\r\n    this.props.history.push(\"/login\");\r\n  }\r\n  render() {\r\n    const childProps = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      userHasAuthenticated: this.userHasAuthenticated\r\n    };\r\n  \r\n    return (\r\n      !this.state.isAuthenticating &&\r\n      <div className=\"App container\">\r\n        <Navbar fluid collapseOnSelect>\r\n          <Navbar.Header>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">Extinctathon</Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n          </Navbar.Header>\r\n          <Navbar.Collapse>\r\n            <Nav pullRight>\r\n              {this.state.isAuthenticated\r\n                ? <Fragment>\r\n                    <LinkContainer to=\"/terminal\">\r\n                      <NavItem>Profile</NavItem>\r\n                    </LinkContainer>\r\n                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\r\n                  </Fragment>\r\n                : <Fragment>\r\n                    <LinkContainer to=\"/signup\">\r\n                      <NavItem>Signup</NavItem>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/login\">\r\n                      <NavItem>Login</NavItem>\r\n                    </LinkContainer>\r\n                  </Fragment>\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      \r\n        \r\n        <Routes childProps={childProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    //Ensures that the url works for github pages\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        {/* Calls on the app component */}\r\n        <App />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}