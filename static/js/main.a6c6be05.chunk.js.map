{"version":3,"sources":["containers/Home.js","containers/NotFound.js","containers/Login.js","containers/Profile.js","components/AppliedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Component","containers_NotFound","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","preventDefault","state","email","password","userHasAuthenticated","history","push","alert","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","onChange","type","Button","block","disabled","validateForm","commands","echo","description","usage","fn","concat","Array","from","arguments","join","cd","ls","args1","Profile","Terminal_default","welcomeMessage","promptLabel","AppliedRoute","_ref","C","component","cProps","rest","objectWithoutProperties","Route","assign","render","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","isAuthenticated","handleLogout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","isAuthenticating","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","Nav","pullRight","react","lib","NavItem","onClick","withRouter","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6c6be05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"lander\">\r\n          <h1>Extinctathon</h1>\r\n          <p>Monitored by MaddAddam. Adam named the living animals, MaddAddam names the dead ones.</p>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>;\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if(this.state.email === \"crake\" && this.state.password === \"oryx\"){\r\n      this.props.userHasAuthenticated(true);\r\n      this.props.history.push(\"/\");\r\n    } else{\r\n      alert(\"Invalid Login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>User</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Terminal from 'react-console-emulator';\r\nimport './Profile.css';\r\n\r\nconst commands = {\r\n    echo: {\r\n        description: 'Echo a passed string.',\r\n        usage: 'echo <string>',\r\n        fn: function () {\r\n          return `${Array.from(arguments).join(' ')}`\r\n        }\r\n    },\r\n    cd:{\r\n        description:\"Change directory.\",\r\n        usage:'cd <directory>',\r\n        fn: function(){\r\n            \r\n        }\r\n    },\r\n    ls:{\r\n        fn: function(args1){\r\n            return `test`\r\n        }\r\n    }\r\n}\r\n\r\nexport default class Profile extends Component {\r\n    render () {\r\n      return (\r\n        <Terminal\r\n          commands={commands}\r\n          welcomeMessage={'Welcome Crake'}\r\n          promptLabel={'crake@Addam:~$'}\r\n        />\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\";\r\nimport Profile from \"./containers/Profile\";\r\nimport AppliedRoute from \"./components/AppliedRoute\";\r\n\r\nexport default ({ childProps }) =>\r\n  <Switch >\r\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n    <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\r\n    <AppliedRoute path=\"/profile\" exact component={Profile} props={childProps} />\r\n    { /* Finally, catch all unmatched routes */ }\r\n    <Route component={NotFound} />\r\n  </Switch>;\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Routes from \"./Routes\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      isAuthenticated:false\r\n    };\r\n  }\r\n  userHasAuthenticated = authenticated =>{\r\n      this.setState({isAuthenticated:authenticated});\r\n    }\r\n  handleLogout = async event => {\r\n    alert(\"Logged Out\");\r\n    this.userHasAuthenticated(false);\r\n    this.props.history.push(\"/login\");\r\n  }\r\n  render() {\r\n    const childProps = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      userHasAuthenticated: this.userHasAuthenticated\r\n    };\r\n  \r\n    return (\r\n      !this.state.isAuthenticating &&\r\n      <div className=\"App container\">\r\n        <Navbar fluid collapseOnSelect>\r\n          <Navbar.Header>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">Extinctathon</Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n          </Navbar.Header>\r\n          <Navbar.Collapse>\r\n            <Nav pullRight>\r\n              {this.state.isAuthenticated\r\n                ? <Fragment>\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavItem>Profile</NavItem>\r\n                    </LinkContainer>\r\n                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\r\n                  </Fragment>\r\n                : <Fragment>\r\n                    <LinkContainer to=\"/signup\">\r\n                      <NavItem>Signup</NavItem>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/login\">\r\n                      <NavItem>Login</NavItem>\r\n                    </LinkContainer>\r\n                  </Fragment>\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Routes childProps={childProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}